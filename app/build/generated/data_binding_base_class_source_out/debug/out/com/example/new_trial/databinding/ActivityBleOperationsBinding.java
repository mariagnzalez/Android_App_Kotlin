// Generated by view binder compiler. Do not edit!
package com.example.new_trial.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.new_trial.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBleOperationsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RecyclerView characteristicsRecyclerView;

  @NonNull
  public final TextView characteristicsTitle;

  @NonNull
  public final ScrollView logScrollView;

  @NonNull
  public final TextView logTextView;

  @NonNull
  public final TextView logTitle;

  @NonNull
  public final LinearLayout mtuContainer;

  @NonNull
  public final EditText mtuField;

  @NonNull
  public final Button requestMtuButton;

  private ActivityBleOperationsBinding(@NonNull ConstraintLayout rootView,
      @NonNull RecyclerView characteristicsRecyclerView, @NonNull TextView characteristicsTitle,
      @NonNull ScrollView logScrollView, @NonNull TextView logTextView, @NonNull TextView logTitle,
      @NonNull LinearLayout mtuContainer, @NonNull EditText mtuField,
      @NonNull Button requestMtuButton) {
    this.rootView = rootView;
    this.characteristicsRecyclerView = characteristicsRecyclerView;
    this.characteristicsTitle = characteristicsTitle;
    this.logScrollView = logScrollView;
    this.logTextView = logTextView;
    this.logTitle = logTitle;
    this.mtuContainer = mtuContainer;
    this.mtuField = mtuField;
    this.requestMtuButton = requestMtuButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBleOperationsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBleOperationsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_ble_operations, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBleOperationsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.characteristics_recycler_view;
      RecyclerView characteristicsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (characteristicsRecyclerView == null) {
        break missingId;
      }

      id = R.id.characteristics_title;
      TextView characteristicsTitle = ViewBindings.findChildViewById(rootView, id);
      if (characteristicsTitle == null) {
        break missingId;
      }

      id = R.id.log_scroll_view;
      ScrollView logScrollView = ViewBindings.findChildViewById(rootView, id);
      if (logScrollView == null) {
        break missingId;
      }

      id = R.id.log_text_view;
      TextView logTextView = ViewBindings.findChildViewById(rootView, id);
      if (logTextView == null) {
        break missingId;
      }

      id = R.id.log_title;
      TextView logTitle = ViewBindings.findChildViewById(rootView, id);
      if (logTitle == null) {
        break missingId;
      }

      id = R.id.mtu_container;
      LinearLayout mtuContainer = ViewBindings.findChildViewById(rootView, id);
      if (mtuContainer == null) {
        break missingId;
      }

      id = R.id.mtu_field;
      EditText mtuField = ViewBindings.findChildViewById(rootView, id);
      if (mtuField == null) {
        break missingId;
      }

      id = R.id.request_mtu_button;
      Button requestMtuButton = ViewBindings.findChildViewById(rootView, id);
      if (requestMtuButton == null) {
        break missingId;
      }

      return new ActivityBleOperationsBinding((ConstraintLayout) rootView,
          characteristicsRecyclerView, characteristicsTitle, logScrollView, logTextView, logTitle,
          mtuContainer, mtuField, requestMtuButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
